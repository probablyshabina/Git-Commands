<!--COMMANDS-->
git --version //retuens the installed version if installed 
git config --list //to find the current author name and email
git config --global user.name //author name for all the repositories
git config --global user.email //author email for all the repos
git config --local user.email //author email for the current repo

git init // initialize an empty repository with the folder name
git add . //stages all the files that has been changed to commit
git add README.md //stages the specifc file that has been changed to commit
git reset . //unstages the all the files that has been staged to commit
git reset README.md //unstages the specific file that has been staged to commit

git status //returns the commit status of the files in the repo

git commit -m "commit message line 1" //commit the files that has been changed

git remote //returns the remote repositories that have been linked to the current local project
git remote add name-of-repo repository-url //links project with remote repository
git remote -v //return the links
git remote show origin

git push name-of-repo branch-of-repo -u //sync with remote repo
ex: git push origin main -u

git fetch //fetches the changes
git merge repo-name/branch-name //keep the local codebase up to date with the branch mentioned
ex: git merge origin/main

git pull origin master //fetches and update local project 
OR
git pull //if -u was added to the command when linking remore repository

git clone repo-url optional-repo-local-name //creates a copy of a repo locally
ex: git clone https://github.com/shabinaliyaudeen/Git-Commands.git git-commands

git log //retuens the commit history
:q to exit

git branch //returns all the branches of repo
git branch -M new-name //rename the current branch
git branch new-branch-name //create new branch
git branch -d //delete if its not merged
git branch -D //delete regardless

git checkout branch-name //switches to specific branch
git checkout -b new-branch-name //creates new branch and switches to it
git checkout - //switches to previous branch

git reset log-number //
git revert log-number //
git commit --amend -m "rename-text" //modifies the last commit msg
git commit --amend --no-edit //withput changing the commit msg adding files to last commit

git stash 
git rebash
git squash
<!---->

<!--FILE-->
create .gitignore and include the file that should not be tracked
<!---->
